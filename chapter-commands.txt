-- Chapter 1: An Introduction to Linux --

ls
 - List
cd
 - Change Directory
pwd
 - Print Working Directory
history
 - Print most recent list of commands
whoami
 - displays the user currently logged in
who
 - Shows the users currently logged in to the system.
echo
 - Echo the arguments provided, using > will write a new file or over an existing, and >> will append to an existing file
more
 - Similar to cat, but dumps out one page at a time, instead of the whole file.
man
 - Manual pages, to learn more about a command
 - Section 1: Commands any user can run.
 - Section 2: System Calls
 - Section 3: Library Functions
 - Section 4: Special Files
 - Section 5: Configuration File formats/
 - Section 6: Games
 - Section 7: Miscellaneous
 - Section 8: Administrative User Commands.
whatis
 - search man pages, searches only the command field for an exact match.
apropos
 - search man pages on both the command field and the short description field for any match.
 | 
 - the pipe command, sends the output of the first command to the command on the other side of the pipe.




-- Chapter 2: Using the vi Editor --

vi and vim commands and navigation



-- Chapter 3: Working with the Linux Shell --


set
 - displays a list of all the shell variables and functions in the current process.

Shell Variable - exists only in the memory space of the shell in which it was created.
 - syntax:  <variable_name>=<variable_value>
 - to view contents of a variable:  echo $<variable_name>
Environment Variable - are visible to child processes, to convert a shell variable to an environment varible, an 'export' attribute needs to be assigned to the variable.

export
 - create environment variable, syntax:  export <variable_name>=<value>

unset
 - deletes the variable and removes it from the environment.

declare
 - displays the variable's properties, syntax:  declare -p <variable_name>  
 - a '-x' in the properties section of the output signifies that it's an environment variable.

alias
 - Command shortcut, syntax:  alias <alias_name>='<command>'

type
 - before creating an alias (or a variable probably), use type to find out if the proposed alias name is in use, syntax: type -a <proposed_alias_name>.


locale
 - locale settings are used to define output formats used by applications depending on the location of the computer

localectl list-locales
 - lists available locale names

localectl
 - used to view and modify system locale and keyboard settings

date
 - reporting information from and managing the system clock
syntax:  date +%<flag>
 %A - Full Weekday name
 %D - Date, same as %m/%d/%y
 %F - Full date; same as %Y-%m-%d
 %N - Nanosecond
 %d - Day of the Month
 %j - Day of the year
 %x - Date representation (eg., 12/31/25)

Time Zone Files:
 - /usr/share/zoneinfo
 - /etc/localtime
    - Both are used to configure a system's time zone: date, date +%Z, ls -l /etc/localtime, and timedatectl display the currennt system time zone

hwclock
 - manages the RTC (Real Time Clock), variants: hwclock, hwclock -r, hwclock --show

timedatectl and timedatectl status
 - view and manage system clocks

timedatectl list-timezones
 - displays a list of time zones

timedatectl set-timezone "<time zone>" changes the system-wide time zone

Bash Configuration Files:
/etc/profile
 - system wide configuration files
 - Contains commands used to configure user's working environment
/etc/bashrc
 - system-wide configuration files
/home/<user_name>/.bash_profile
 - Contains commands used to configure user's working environment
/home/<user_name>/.bashrc
 - used to configure Bash Shell features
/home/<user_name>/.bash_logout
 - Used to configure Bash Shell features, specifically used to perform operations on logout

Redirection:
heredocs <<
 - reads each input line from current input source until it reaches the 'limit word', which may be any word the user chooses
 - syntax (the example below will print out each line):  
   $ cat << RNDI
   > dummy
   > character
   > RNDI
   dummy
   character
   $      
 
Redirect stdout with > and >>
 - > 
    will create or overwrite an existing file
 - >> 
    will append to or create a file

Redirect stderr wtih 2>:
 - 2> and 2>>
    selects an alternate standard error file to write or append to  

 - 2>&1
    redirects standard error to the same location as standard output
    2> designates altering the data stream for error messages
    & is a boolean operator
    1 is the file descriptor number for the standard input device
 - 1>&2
    redirects the standard output to the same location as the standard error

 - &>
    redirects both standard error and standard output to the same file

 | 
   - unnamed pipe:  uses the output from the command to the left of the pipe as the input to the command on the right side of the pipe by creating a temporary file that Linux automatically removes.


-- Chapter 4: Managing Linux Users and Groups --

DAC - Discretionary Access Control - permit or restrict access to files

UID_MIN & UID_MAX - system variables that specify the range of user ids

/etc/login.defs - file that defines new user defaults

System Account - linux service/applications may have account IDs, typically between 0-99, with no password, no home directory, and no log in

/etc/passwd - flat file database that contains 7-field unique user records, delimited by colons
  format:  
        user_name:password:UID:GID:comment:home_directory:default_shell

/etc/shadow - flat-file database that stores user passwords and password aging expirations, each /etc/passwd record should have a corresponding /etc/shadow record

/etc/group and /etc/gshadow - group information is stored in group, and group passwords are stored in gshadow

w
  - displays user ID of all logged-on users

who
  - similar to 'w' command, but doesn't display the processes that are executing

su
  - switch user, assume the privileges of another user by switching their user ID and group ID

su - <username>
  - su "dash" allows user to become exactly like the new user

id <username>
  - displays user ID, primary group ID, and secondary groups for the user specified in the argument

tty
  - 'teletypewriter' - the name of the treminal or pseudo-terminal currently in use

useradd
  - create a new user
  options:
	-c  change the user comment
	-e  specify the date when the user account will be disabled
	-g  specify the user's primary group
	-G specify the user's secondary group memberships, you can add more than one by separating the groups with commas
	-d  Location of user's home dir
	-m  Creates the home directory
	-r  specifies that the user being created is a system user
	-s  absolute path to the default shell for the user
	-u  Allows admin to manually specify a user ID
	useradd -D
		view the values currently set for an existing user

/etc/skel - default directory that contains the files and directories copied to a new user's home directory

passwd
	- allows root or current user to change password, and allows system admin to manage password aging

passwd <username> 
	- allows root to change a user's password
	-l  locks user account
	-u  unlocks user account
	-n  sets MIN_DAYS req'd before password can be changed
	-x  sets MAX_DAYS req'd before password change
	-w  set warning in # of days before expiration
	-i  set inactive days after pw expiration before account is disabled
	-S  display password aging information
	-e <username>  force user to change their password at next login

chage
  - change aging command, allows you to view or alter a user's password aging infomation
	chage -l <username>   -> displays user's aging information

usermod
	- modify an existing user account

	-G <group_name>  remove all secondary groups and replace with a new secondary group or list (comma delimited)
	-aG  add new secondary group
	-l  changes user's logon/username
	-d  change location of user's home directory
	-m  moves/renames current suer's home directory to the new user's name

userdel <username>
	- remove a user account, removes user's record from /etc/shadow and /etc/passwd, but home directory and files remain intact
	- userdel -r <username> removes user's shadow and passwd files

groupadd - add groups to system
gpasswd  - set group password
groupmod - modify group information
groupdel - deprovision the group

-- Chapter 5 - Managing Linux Files and Directories --
filesystem - Controls how data is managed on a hard disk
FHS - File System Heirarchy - Defines a suggested logical location of directories and files on Linux/Unix distributions

ls
 - shows a list of filenames and directories
	-a  displays all files
	-l  long listing, lists permissions, number of links, user and group owners, file size, modification time, and file name
	-R  recursive -> contents of all subdirectories
	-i  inode a filename belongs to

filename - designated by user or application and assigned an...
inode number (index number) - filesystem assigns this number, which is used by the OS to access files and their information, holds a files metadata
			    - permissions, numbers of links, user and group owners, file size, time stamps, and data pointers, but NOT filename

touch
 - create a file or update an existing files timestamp

stat
 - lists the file's birth, permissions, number of links, device, user ID, gruop ID, file size and SELinux settings

hard link - associates the file's name with the file's inode, to create additional hard links, use 'ln', only work within the same file system

ln
 - create additional hard links

symbolic links / soft links - reference a file in the same filesystem, another filesystem, directories, or across a network
	- Each symbolic link has it's own inode number, unlike hard links, which share the same inode

ln -s <source_file> <destination_file>
	- symbolic link command

mkdir
 - make directory
	-p  creates a directory tree

magic number - when most files are created, the first several bytes of the file contain the file signature - aka, the magic number - which indicates the type of content stored in the file

file
 - compares a file's magic number / file signature with databases of files signatures, located in: /usr/share/misc/magic, /usr/share/misc/magic.mgc, /etc/magic to determine it's type

head
 - by default, will show the first ten lines of a file
	-n  this option allows the user to show the first 'n' lines of a file: head -n 50 <file_name> -> where 50 = 'n'

tail
 - by default, shows the last ten lines of a file
	-  this option allows the user to show the last 'n' lines of a file: tail -n 20 <file_name>  -> where 20 = 'n'

rm
 - remove/delete files
	-i  interactive, requires user confirmation before deletion
	-r or -R  recursively delete directory, it's contents and sub-directories

cp

mv

find
 - search for files through 'brute force' instead of searching a pre-allocated database, searches recursively by default, if no directory is specified, current directory is default
  	find <start_directory> <expression>
 
	-name  matches name of file
	-size  matches file size:
		b  blocks
		c  bytes
		w  word
		k  kilobytes
		M  Megabytes
		G  Gigabytes
	-type  matches type of file:
		-f  regulare text file
		-d  directory
		-l  symbolic link
		-p  named pipe
	-inum <number>  matches file  with specific inode number
	-user  matches owner of file
	-group  matches group owner
	-perm  matches file permission
	-readable / -writeable / -executable  matches files that have specified permission set
	
	-a  and
	-not not
	-o or
	-exec  takes standard output from the 'find' expression and input it into specified command
	-ok  executes the command but requires user confirmation

{} 
 - can be used as a placeholder for the standard output of the find command, which becomes the standard input of the command executed by -exec or -ok

xargs
 - reads whitespace-delimited input and executes a command on each input (space, tab, newline)
	Example:
		$ echo file{a,b,c}
		$ ls -l file*
		# filea fileb filec
		$ ls file* | xargs -I {} mv {} test.{}
		$ ls test.*
		# test.filea test.fileb test.filec

	In the example above, ls request all the files that match file* (which are filea fileb filec), xargs places the argument in the first set of {} with xargs -I, then
		executes the mv command to on the placeholder, the second set of {}, moves them to test.{} where filea becomes test.filea, the '-I' is the string replacement option

aliases, which, whereis, hash, type -> not included in Comptia Exam.





